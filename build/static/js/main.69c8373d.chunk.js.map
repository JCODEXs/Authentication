{"version":3,"sources":["components/Profile/ProfileForm.module.css","components/Layout/MainNavigation.module.css","components/Profile/UserProfile.module.css","components/StartingPage/StartingPageContent.module.css","components/store/auth-context.js","components/Layout/MainNavigation.js","components/Layout/Layout.js","components/Profile/ProfileForm.js","components/Profile/UserProfile.js","components/Auth/AuthForm.js","pages/AuthPage.js","components/StartingPage/StartingPageContent.js","pages/HomePage.js","App.js","index.js","components/Auth/AuthForm.module.css"],"names":["module","exports","logoutTimer","AuthContext","React","createContext","token","isLoggedIn","login","logout","calculateRemainingTime","expirationDate","currentTime","Date","getTime","AuthContextprovider","props","initialToken","tokenData","localStorage","getItem","remainingTime","removeItem","duration","retrieveLocalToken","useState","setToken","userIsLoggedIn","logoutHandler","useCallback","clearTimeout","console","log","useEffect","setTimeout","contextValue","expirationTime","setItem","Provider","value","children","MainNavigation","authCtxM","useContext","history","useHistory","className","classes","header","to","logo","onClick","replace","Layout","ProfileForm","newPasswordInputRef","useRef","authCTX","form","control","htmlFor","type","id","minLength","ref","action","event","preventDefault","enteredNewPassword","current","fetch","method","body","JSON","stringify","idToken","password","returnSecureToken","headers","then","res","catch","err","UserProfile","profile","AuthForm","emailInputRef","passwordInputRef","authCtx","isSignUpOrLogin","setIsLogin","isLoading","setIsLoading","auth","onSubmit","url","enteredEmail","enteredPassword","email","ok","json","data","errorMessage","error","message","Error","expiresIn","toISOString","alert","required","actions","toggle","prevState","AuthPage","StartingPageContent","starting","HomePage","App","path","exact","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.69c8373d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileForm_form__2xGgc\",\"control\":\"ProfileForm_control__2YUZH\",\"action\":\"ProfileForm_action__opJ_6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__2lqQ1\",\"logo\":\"MainNavigation_logo__1TgMx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__gQOnH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"starting\":\"StartingPageContent_starting__kwCvL\"};","import React,{useCallback, useEffect, useState} from \"react\";\nlet logoutTimer;\n\n// creates a context object that we can use to share data throughout the app\n\nconst AuthContext = React.createContext({\n    token: '',\n    isLoggedIn: false,\n    login:(token) => {},\n    logout:() => {}\n   \n});\n\nconst calculateRemainingTime = (expirationDate) => {\n    const currentTime = new Date().getTime();\n    const TokenExpeditionTime = new Date(expirationDate).getTime();\n\n    const TokenExpirationTime = TokenExpeditionTime - currentTime;\n    return TokenExpirationTime;}\n\nconst retrieveLocalToken = () => {\n    const token = localStorage.getItem('token')\n    const expirationDate= localStorage.getItem('expirationDate')\n    const remainingTime = calculateRemainingTime(expirationDate);\n// avoiding authentication if tokens soon expire\nif (remainingTime > 40000) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    return null;\n}\n    return {\n        token: token,\n        duration: remainingTime\n    }\n}\n\n\n// creates a provider component cointaining the context object, its children and handling functions.\n\nexport const AuthContextprovider = (props)=>{\n  //persistent login token\n  const tokenData = retrieveLocalToken();\n    let initialToken;\n    if (tokenData) {\n        initialToken = tokenData.token;\n    }\n\n// the token variable is the core of the authentication system and therefore \n// it is the only state variable used in context.\nconst [token, setToken] = useState(initialToken);\n// is used to trasform the token into a boolean value. acording to the token existence.\nconst userIsLoggedIn = !!token;\n\n// define the functions of the context object.\nconst loginHandler = (token,expirationTime) => {\n    setToken(token);\nlocalStorage.setItem('token', token);\nlocalStorage.setItem('expirationTime', expirationTime);\nconst remainingTime = calculateRemainingTime(expirationTime);\nlogoutTimer = setTimeout(logoutHandler,remainingTime);\n}\n\nconst logoutHandler = useCallback(() => {\n    setToken(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n\n    if(logoutTimer){\n      clearTimeout(logoutTimer);\n    }\n    console.log('localStorage', localStorage);\n},[])\n\nuseEffect(() => {\n    if (tokenData){\n        logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n    }\n},[tokenData, logoutHandler]);\n\n\n// defines the value to be passed to the context provider \n\nconst contextValue = {\n    token:token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler \n} ;\n\n// the created context \n    return (<AuthContext.Provider value={contextValue}>{props.children}</AuthContext.Provider>\n);\n};\nexport default AuthContext;","import { Link, useHistory} from 'react-router-dom';\nimport { useContext } from 'react';\nimport  AuthContext  from '../store/auth-context';\n\nimport classes from './MainNavigation.module.css';\n\nconst MainNavigation = () => {\n  const authCtxM = useContext(AuthContext);\n  const { isLoggedIn } = authCtxM;\n  const history = useHistory();\n\n  const logoutHandler = () => {\n    authCtxM.logout();\n    console.log(authCtxM.token);\n    history.replace('/');}\n\n\n  return (\n    <header className={classes.header}>\n      <Link to='/'>\n        <div className={classes.logo}>React Auth</div>\n      </Link>\n      <nav>\n        <ul>\n          {!isLoggedIn && ( <li>\n            <Link to='/auth'>Login</Link>\n          </li>)}\n\n          {isLoggedIn && ( <li>\n            <Link to='/profile'>Profile</Link>\n          </li>)}\n          \n          {isLoggedIn && \n          (<li>\n            <button onClick={logoutHandler}>Logout</button>\n          </li>)}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from 'react';\n\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useRef,useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport classes from './ProfileForm.module.css';\nimport AuthContext from '../store/auth-context';\n\nconst ProfileForm = () => {\n  //creates a reference to the input element\nconst newPasswordInputRef = useRef();\nconst history = useHistory();\nconst authCTX = useContext(AuthContext);\n\nconst submitHandler = (event) => {\n  event.preventDefault();\n  // defining the final value of the input element to be used in the fetch request\n  const enteredNewPassword = newPasswordInputRef.current.value;\n\n  fetch('https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyBWmWXLqQfs0LepvS0u3J9pBqeo9xHE2wI', \n  {\n  method: 'POST',\n  body: JSON.stringify({\n  idToken: authCTX.token,\n  password:enteredNewPassword,\n  returnSecureToken:false\n  }),\n\n  headers: {\n  'Content-Type': 'application/json',\n  }\n}).then(res => {history.replace('/');}).catch(err => {console.log(err);})}\n\n  return (\n    <form className={classes.form}>\n      <div className={classes.control}>\n        <label htmlFor='new-password'>New Password</label>\n        <input type='password' id='new-password' minLength='7' ref={newPasswordInputRef} />\n      </div>\n      <div className={classes.action}>\n        <button onClick={submitHandler}>Change Password</button>\n      </div>\n    </form>\n  );\n}\n\nexport default ProfileForm;\n","import ProfileForm from './ProfileForm';\nimport classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <section className={classes.profile}>\n      <h1>Your User Profile</h1>\n      <ProfileForm />\n    </section>\n  );\n};\n\nexport default UserProfile;\n","import { useState,useRef, useContext } from 'react';\nimport {useHistory } from 'react-router-dom';\n\nimport classes from './AuthForm.module.css';\nimport AuthContext from '../store/auth-context';\n\nconst AuthForm = () => {\n  const history=useHistory();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n const authCtx= useContext(AuthContext);\n  //const { isLoggedIn} = authCtx;\n\n  const [isSignUpOrLogin, setIsLogin] = useState(true);\n   const [isLoading, setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n    // optinal validation\n    setIsLoading(true);\n    let url;\n    if (isSignUpOrLogin)   {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBWmWXLqQfs0LepvS0u3J9pBqeo9xHE2wI'\n    } else {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBWmWXLqQfs0LepvS0u3J9pBqeo9xHE2wI'\n     \n    }\n    fetch( url, \n      { method: 'POST', \n        body: JSON.stringify({ \n             email: enteredEmail,\n             password: enteredPassword,\n             returnSecureToken: true\n    }),\n       headers: {\n      'Content-Type': 'application/json',},\n    })\n\n    .then(res => {\n\n      setIsLoading(false);\n   if(res.ok){\n     console.log(res.json);\n       \n      return res.json();\n      }else{\n      \n        return res.json().then((data) => {\n          let errorMessage = 'somthing went wrong';\n          if (data && data.error && data.error.message) {\n            errorMessage = data.error.message;\n          }\n         \n          throw new Error(errorMessage);\n        });\n    }})\n    .then(data => {\n      const expirationDate = new Date(new Date().getTime() + (+data.expiresIn * 1000));\n      authCtx.login(data.idToken, expirationDate.toISOString());\n      history.replace('/profile');\n      \n    }).catch(err => {\n      alert(err.message)\n    })\n  \n  }\n  return (\n    <section className={classes.auth}>\n      <h1>{isSignUpOrLogin ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor='email'>Your Email</label>\n          <input type='email' id='email' required ref ={emailInputRef}/>\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password'>Your Password</label>\n          <input type='password' id='password' required ref={passwordInputRef}/>\n        </div>\n        <div className={classes.actions}>\n{!isLoading && <button>{isSignUpOrLogin ? 'Login' : 'Create Account'}</button>}\n{isLoading && <p> Sending request...</p>}\n          <button\n            type='button'\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isSignUpOrLogin ? 'Create new account' : 'Login with existing account'}\n           \n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from '../components/Auth/AuthForm';\n\nconst AuthPage = () => {\n  return <AuthForm />;\n};\n\nexport default AuthPage;\n","import classes from './StartingPageContent.module.css';\n\nconst StartingPageContent = () => {\n  return (\n    <section className={classes.starting}>\n      <h1>Welcome on Board!</h1>\n    </section>\n  );\n};\n\nexport default StartingPageContent;\n","import StartingPageContent from '../components/StartingPage/StartingPageContent';\n\nconst HomePage = () => {\n  return <StartingPageContent />;\n};\n\nexport default HomePage;\n","import { Switch, Route, Redirect } from 'react-router-dom';\nimport { useContext } from 'react';\nimport AuthContext from './components/store/auth-context';\n\nimport Layout from './components/Layout/Layout';\nimport UserProfile from './components/Profile/UserProfile';\nimport AuthPage from './pages/AuthPage';\nimport HomePage from './pages/HomePage';\n\nfunction App() {\n  const authCtx = useContext(AuthContext);\n  return (\n    <Layout>\n      <Switch>\n        <Route path='/' exact>\n          <HomePage />\n        </Route>\n\n        <Route path='/auth'>\n        {!authCtx.isLoggedIn &&<AuthPage />}\n        {authCtx.isLoggedIn && <Redirect to='/' />}\n</Route>\n\n        <Route path='/profile'>\n        {authCtx.isLoggedIn &&<UserProfile />}\n         {!authCtx.isLoggedIn && <Redirect to='/auth' />}\n        </Route>\n        \n        <Route path='*'>\n          <Redirect to={'/'}/> </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport { AuthContextprovider } from './components/store/auth-context';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <AuthContextprovider>\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  </AuthContextprovider>\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__MPw6W\",\"control\":\"AuthForm_control__2fVSU\",\"actions\":\"AuthForm_actions__1VNhY\",\"toggle\":\"AuthForm_toggle__21tnB\"};"],"sourceRoot":""}